<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/context  
						http://www.springframework.org/schema/context/spring-context.xsd  
						http://www.springframework.org/schema/beans  
						http://www.springframework.org/schema/beans/spring-beans.xsd  
						http://www.springframework.org/schema/tx  
						http://www.springframework.org/schema/tx/spring-tx.xsd  
						http://www.springframework.org/schema/jdbc  
						http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd  
						http://www.springframework.org/schema/cache  
						http://www.springframework.org/schema/cache/spring-cache-4.2.xsd  
						http://www.springframework.org/schema/aop  
						http://www.springframework.org/schema/aop/spring-aop.xsd  
						http://www.springframework.org/schema/util  
						http://www.springframework.org/schema/util/spring-util.xsd
						http://camel.apache.org/schema/spring
						http://camel.apache.org/schema/spring/camel-spring-2.17.2.xsd">

	<camel:routeContext id="Routing-Role-Module" xmlns="http://camel.apache.org/schema/spring">
		<camel:route>
			<camel:from uri="direct:getRolesWithPermissionsByAgencyAndPrincipal" />
			<camel:bean ref="roleDAO" method="getRolesByAgencyAndPrincipal(${body[0]},${body[1]})" />
			<camel:setHeader headerName="roles">
				<camel:simple>${body}</camel:simple>
			</camel:setHeader>
			<camel:setHeader headerName="roleSize">
				<camel:simple>${header.roles.size}</camel:simple>
			</camel:setHeader>
			<camel:loop>
				<camel:header>roleSize</camel:header>
				<camel:setHeader headerName="roleIndex">
					<camel:simple>${exchangeProperty.CamelLoopIndex}</camel:simple>
				</camel:setHeader>
				<camel:setHeader headerName="currentRole">
					<camel:simple>${header.roles[${header.roleIndex}]}</camel:simple>
				</camel:setHeader>
				<camel:setBody>
					<camel:simple>${header.currentRole.id}</camel:simple>
				</camel:setBody>
				<camel:bean ref="roleDAO" method="getRolePermissionsByRoleId" />
				<camel:transform>
					<camel:javaScript>request.headers.get('currentRole').permissions = request.body</camel:javaScript>
				</camel:transform>
			</camel:loop>
			<camel:setBody>
				<camel:header>roles</camel:header>
			</camel:setBody>
		</camel:route>
	 	<camel:route>
            <camel:from uri="direct:batchDeleteRolesWithReturn"/>
            <camel:bean ref="roleDAO" method="batchRemoveByPKs(${body[0][2]})"/>
            <camel:bean ref="roleDAO" method="getRolesByAgencyAndDepartmentId(${body[0][0]}, ${body[0][1]})"/>
        </camel:route>
	</camel:routeContext>
</beans>