<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd  
						http://www.springframework.org/schema/beans  
						http://www.springframework.org/schema/beans/spring-beans.xsd  
						http://www.springframework.org/schema/tx  
						http://www.springframework.org/schema/tx/spring-tx.xsd  
						http://www.springframework.org/schema/jdbc  
						http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd  
						http://www.springframework.org/schema/cache  
						http://www.springframework.org/schema/cache/spring-cache-4.2.xsd  
						http://www.springframework.org/schema/aop  
						http://www.springframework.org/schema/aop/spring-aop.xsd  
						http://www.springframework.org/schema/util  
						http://www.springframework.org/schema/util/spring-util.xsd
						http://camel.apache.org/schema/spring
						http://camel.apache.org/schema/spring/camel-spring-2.17.2.xsd">
	<camel:routeContext id="Routing-Group-Module" xmlns="http://camel.apache.org/schema/spring">
	 	<camel:route>
            <camel:from uri="direct:batchDeleteGroupsWithReturn"/>
            <camel:setHeader headerName="agency">
            	<camel:simple>${body[0]}</camel:simple>
            </camel:setHeader>
            <camel:setHeader headerName="groupIds">
            	<camel:simple>${body[1]}</camel:simple>
            </camel:setHeader>
            <camel:setHeader headerName="groupIdLoopSize">
               	<camel:simple>${header.groupIds.length}</camel:simple>
           	</camel:setHeader>
         	<camel:loop>
				<camel:header>groupIdLoopSize</camel:header>
				<camel:setHeader headerName="currentGroupId">
                   	<camel:simple>${header.groupIds[${exchangeProperty.CamelLoopIndex}]}</camel:simple>
              	</camel:setHeader>
              	<camel:bean ref="groupDAO" method="deleteRelationshipWithRoles(${header.currentGroupId})"/>
              	<camel:bean ref="groupDAO" method="removeByPK(${header.currentGroupId})"/>
			</camel:loop>
			<camel:bean ref="groupDAO" method="searchByAgency(${header.agency})"/>
        </camel:route>
        <camel:route>
        	<camel:from uri="direct:createGroup"/>
       	    <camel:setHeader headerName="newGroup">
            	<camel:simple>${body[0]}</camel:simple>
            </camel:setHeader>
        	<camel:bean ref="groupDAO" method="saveOrUpdate(${header.newGroup})"/>
        	<camel:setHeader headerName="roleIdLoopSize">
        		<camel:simple>${header.newGroup.roleIds.size}</camel:simple>
        	</camel:setHeader>
        	<camel:loop>
        		<camel:header>roleIdLoopSize</camel:header>
				<camel:setHeader headerName="currentRoleId">
                   	<camel:simple>${header.newGroup.roleIds.get(${exchangeProperty.CamelLoopIndex})}</camel:simple>
              	</camel:setHeader>
              	<camel:bean ref="groupDAO" method="createRelationshipWithRole(${header.newGroup.id}, ${header.currentRoleId})"/>
        	</camel:loop>
        	<camel:setBody>
        		<camel:simple>${header.newGroup}</camel:simple>
        	</camel:setBody>
        </camel:route>
        <camel:route>
        	<camel:from uri="direct:getGroupById"/>
       		<camel:bean ref="groupDAO" method="searchByPK(${body[0]})"/>
       		<camel:setHeader headerName="groupModel">
       			<camel:simple>${body}</camel:simple>
       		</camel:setHeader>
       		<camel:bean ref="groupDAO" method="getRelationshipWithRoles(${header.groupModel.id})"/>
       		<camel:transform>
       			<camel:javaScript>request.headers.get("groupModel").roleIds = request.body</camel:javaScript>
       		</camel:transform>
       		<camel:setBody>
       			<camel:simple>header.groupModel</camel:simple>
       		</camel:setBody>
        </camel:route>
        <camel:route>
        	<camel:from uri="direct:updateGroup"/>
        	<camel:bean ref="groupDAO" method="deleteRelationshipWithRoles(${body[0].id})"/>
        	<camel:toD uri="direct:createGroup"/>
        </camel:route>
	</camel:routeContext>
</beans>